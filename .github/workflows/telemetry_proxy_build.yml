name: Create and publish the Telemetry Proxy Docker image

# Configures this workflow to run every time a change is pushed to the branch called `main` or a pull request to `main` is created
on:
  push:
    branches: ['main']
  pull_request:

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/telemetry-proxy

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, which is the CWD for
      # the rest of the steps
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Protoc
        uses: arduino/setup-protoc@v3

      - name: Compile Protobufs
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest && \
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest && \
          PATH="${PATH}:${HOME}/go/bin" && \
          protoc --go_out=telemetry-proxy/proto-out --go_opt=paths=source_relative --go-grpc_out=telemetry-proxy/proto-out --go-grpc_opt=paths=source_relative -Iprotos protos/command.proto
        
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
            go-version-file: 'telemetry-proxy/go.mod'

      - name: Build Go Binary
        run: pushd telemetry-proxy && go build telemetry_proxy.go && popd
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # This step uses [docker/metadata-action](https://github.com/docker/metadata-action#about) to extract tags and labels that will be applied to the specified image. The `id` "meta" allows the output of this step to be referenced in a subsequent step. The `images` value provides the base name for the tags and labels.
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch,enable=${{ github.ref != 'refs/heads/main' }}
            type=ref,event=pr

      - name: Build and push telemetry proxy Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: telemetry-proxy
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
