// Protobuf definition for Cornell Rocketry Team's 
// Fill Station Commands
//
// Author: Zach Garcia

syntax = "proto3";

option go_package = "../protos/command.proto";

package command;

// The telemetry service definition
service FillStationTelemeter {
    // Sends telemetry
    rpc StreamTelemetry (TelemetryRequest) returns (stream FillStationTelemetry) {}
}

// The telemetry service definition
service RocketTelemeter {
    // Sends telemetry
    rpc StreamTelemetry (TelemetryRequest) returns (stream RocketTelemetry) {}
}

// The commanding service definition
service Commander {
    // Sends telemetry
    rpc SendCommand (Command) returns (CommandReply) {}
}

// The telemetry message
// TODO(Zach) add parameters for commanding
message Command {
    optional bool sv1_open = 1;
    optional bool bv1_open = 2;
    optional bool bv1_off = 3;
    optional bool qd_retract = 4;
    optional bool ignite = 5;
    optional bool sv2_close = 6;
    optional bool mav_open = 7;
    optional bool fire = 8;
}

// The response message containing an ack
// TODO(Zach) add relevant reply values?
message CommandReply {}

// The telemetry request message
message TelemetryRequest {}

enum FlightMode {
    STARTUP = 0;
    STANDBY = 1;
    ASCENT = 2;
    DROGUE_DEPLOYED = 3;
    MAIN_DEPLOYED = 4;
    FAULT = 5;
}

message Events {
    bool key_armed = 1;
    bool altitude_armed = 2;
    bool altimeter_init_failed = 3;
    bool altimeter_reading_failed = 4;
    bool altimeter_was_turned_off = 5;
    bool gps_init_failed = 6;
    bool gps_reading_failed = 7;
    bool gps_was_turned_off = 8;
    bool imu_init_failed = 9;
    bool imu_reading_failed = 10;
    bool imu_was_turned_off = 11;
    bool accelerometer_init_failed = 12;
    bool accelerometer_reading_failed = 13;
    bool accelerometer_was_turned_off = 14;
    bool thermometer_init_failed = 15;
    bool thermometer_reading_failed = 16;
    bool thermometer_was_turned_off = 17;
    bool sd_init_failed = 18;
    bool sd_write_failed = 19;
    bool rfm_init_failed = 20;
    bool rfm_transmit_failed = 21;
}

message RocketMetadata {
    bool alt_armed = 1;
    bool alt_valid = 2;
    bool gps_valid = 3;
    bool imu_valid = 4;
    bool acc_valid = 5;
    bool therm_valid = 6;
    bool voltage_valid = 7;
    bool adc_valid = 8;
    bool fram_valid = 9;
    bool sd_valid = 10;
    bool gps_msg_valid = 11;
    bool mav_state = 12;
    bool sv_state = 13;
    FlightMode flight_mode = 14;
}

message GPSTelemetry {
    int32 latitude = 1;
    int32 longitude = 2;
    uint32 num_satellites = 3;
    uint32 utc_time = 4;
}

message AccelerometerTelemetry {
    float accel_x = 1;
    float accel_y = 2;
    float accel_z = 3;
}

message IMUTelemetry {
    float gyro_x = 1;
    float gyro_y = 2;
    float gyro_z = 3;
    float accel_x = 4;
    float accel_y = 5;
    float accel_z = 6;
    float ori_x = 7;
    float ori_y = 8;
    float ori_z = 9;
    float grav_x = 10;
    float grav_y = 11;
    float grav_z = 12;
}

message RocketLoRaTelemetry {
    RocketMetadata metadata = 1;
    uint32 ms_since_boot = 2;
    Events events = 3;
    float altitude = 4;
    GPSTelemetry gps_telem = 5;
    IMUTelemetry imu_telem = 6;
    AccelerometerTelemetry accel_telem = 7;
    float temp = 8;
    float voltage = 9;
    float pt3 = 10;
    float pt4 = 11;
    float blims_state = 12;
}

message RocketUmbTelemetry {
    RocketMetadata metadata = 1;
    uint32 ms_since_boot = 2;
    Events events = 3;
    bool radio_state = 4;
    bool transmit_state = 5;
    float voltage = 6;
    float pt3 = 7;
    float pt4 = 8;
    float rtd_temp = 9;
}

message RocketTelemetry{
    optional RocketLoRaTelemetry lora_telem = 1;
    optional RocketUmbTelemetry umb_telem = 2;
}

// The telemetry message
message FillStationTelemetry {
    uint32 timestamp = 1;
    float pt1 = 2;
    float pt2 = 3;
    float lc1 = 4;
    float sv1_cont = 5;
    float ign1_cont = 6;
    float ign2_cont = 7;
}
